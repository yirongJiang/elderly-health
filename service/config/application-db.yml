﻿spring:
  datasource:
    name: datasource
    type: com.alibaba.druid.pool.DruidDataSource
    url: jdbc:mysql://47.109.58.67:3306/evaluation?useSSL=false&useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
    username: root
    password: collector
    driver-class-name: com.mysql.cj.jdbc.Driver
    druid:
      initialSize: 2  #初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      minIdle: 2  #最小连接池数量
      maxActive: 10  #最大连接池数量
      maxWait: 60000  #获取连接时最大等待时间，单位毫秒。配置了maxWait之后，缺省启用公平锁，并发效率会有所下降，如果需要可以通过配置useUnfairLock属性为true使用非公平锁。
      poolPreparedStatements: true  #是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      maxOpenPreparedStatements: 10  #要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。在Druid中，不会存在Oracle下PSCache占用内存过多的问题，可以把这个数值配置大一些，比如说100
      maxPoolPreparedStatementPerConnectionSize: 20
      timeBetweenEvictionRunsMillis: 60000  #有两个含义：1)Destroy线程每timeBetweenEvictionRunsMillis毫秒检查一次连接池中空闲的连接，把空闲时间超过minEvictableIdleTimeMillis毫秒的连接断开，直到连接池中的连接数到minIdle为止 2)testWhileIdle的判断依据
      minEvictableIdleTimeMillis: 28700000  #一个连接在池中最小生存的时间，单位是毫秒（理论上要小于wait_timeout才有意义）
      maxEvictableIdleTimeMillis: 28700000  #一个连接在池中最打生存的时间，单位是毫秒，不能小于minEvictableIdleTimeMillis
      validationQuery: SELECT 1 FROM DUAL  #测试查询语句
      testWhileIdle: true  #建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效
      testOnBorrow: false  #申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。失效连接主要通过testWhileIdle保证，如果获取到了不可用的数据库连接，一般由应用处理异常。
      testOnReturn: false  #归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      filters: stat,slf4j
      loginUsername: admin
      loginPassword: admin123
